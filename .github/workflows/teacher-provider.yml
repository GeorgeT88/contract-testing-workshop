name: '[Teacher Provider] - Build, Publish OpenAPI & Deploy'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to. Select 'NONE' for build only."
        required: true
        type: choice
        default: 'NONE'
        options: [ NONE, DEV, PRE, PROD ]

env:
  PACT_BROKER_BASE_URL: ${{ vars.PACT_BROKER_BASE_URL }}
  PACTICIPANT: "teacher-provider"
  MAVEN_CLI_OPTS: >
    --batch-mode --errors --fail-at-end --show-version
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

jobs:
  build:
    name: Build & Generate OpenAPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with: { distribution: 'temurin', java-version: '17', cache: 'maven' }

      - name: Build with Maven
        run: mvn -f teacher-provider/pom.xml $MAVEN_CLI_OPTS clean install

      - name: Upload OpenAPI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: teacher-provider/target/openapi.yaml

      - name: Create and Upload Verification Artifact
        run: echo "OpenAPI specification generated by code" > verification-results.txt
      - uses: actions/upload-artifact@v4
        with:
          name: verification-results
          path: verification-results.txt

  publish_openapi:
    name: Publish OpenAPI Specification
    needs: build
    uses: ./.github/workflows/reusables/publish-openapi.yml
    with:
      pact_broker_base_url: ${{ env.PACT_BROKER_BASE_URL }}
      provider_name: ${{ env.PACTICIPANT }}
      provider_version: ${{ github.sha }}
      branch_name: ${{ github.ref_name }}
      openapi_artifact_name: 'openapi-spec'
      openapi_file_path: 'teacher-provider/target/openapi.yaml'
      verification_artifact_name: 'verification-results'
      verification_file_path: 'verification-results.txt'
    secrets:
      pact_broker_token: ${{ secrets.PACTFLOW_TOKEN }}

  can_i_deploy:
    name: Can I Deploy?
    if: github.event.inputs.environment != 'NONE'
    needs: publish_openapi
    uses: ./.github/workflows/reusables/can-i-deploy.yml
    with:
      pact_broker_base_url: ${{ env.PACT_BROKER_BASE_URL }}
      pacticipant: ${{ env.PACTICIPANT }}
      version: ${{ github.sha }}
      environment: ${{ github.event.inputs.environment }}
    secrets:
      pact_broker_token: ${{ secrets.PACTFLOW_TOKEN }}

  deploy:
    name: Deploy to ${{ github.event.inputs.environment }}
    if: github.event.inputs.environment != 'NONE'
    needs: check_deployment_gate
    uses: ./.github/workflows/reusables/deploy.yml
    with:
      pacticipant: ${{ env.PACTICIPANT }}
      version: ${{ github.sha }}
      environment: ${{ github.event.inputs.environment }}

  tag_deployment:
    name: Tag Deployment in Pact Broker
    if: github.event.inputs.environment != 'NONE'
    needs: perform_deployment
    uses: ./.github/workflows/reusables/tagging.yml
    with:
      pact_broker_base_url: ${{ env.PACT_BROKER_BASE_URL }}
      pacticipant: ${{ env.PACTICIPANT }}
      version: ${{ github.sha }}
      environment: ${{ github.event.inputs.environment }}
    secrets:
      pact_broker_token: ${{ secrets.PACTFLOW_TOKEN }}