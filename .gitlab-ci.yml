image: maven:3-openjdk-17

variables:
  # Pipeline image configuration
  MAVEN_CLI_OPTS: >
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
  PACT_BROKER_BASE_URL: https://sngular-demo.pactflow.io
  PACT_BROKER_TOKEN: $PACTFLOW_TOKEN
  PIPELINE_NAME: '[$ENVIRONMENT] - $PIPELINE pipeline'

  # Manual execution parameters
  PIPELINE:
    description: "The component pipeline to be executed."
    value: "consumer"
    options:
      - "consumer"
      - "student-provider"
      - "teacher-provider"
  ENVIRONMENT:
    description: "Environment where the component will be published. Select 'NONE' for a build without deployment."
    value: "NONE"
    options:
      - "NONE"
      - "DEV"
      - "PRE"
      - "PROD"

workflow:
  name: '$PIPELINE_NAME'
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: '$PIPELINE != "consumer" && $PIPELINE != "student-provider" && $PIPELINE != "teacher-provider" && $PIPELINE != "verification"'
      when: never
    - if: '$PIPELINE != "verification" && $ENVIRONMENT != "DEV" && $ENVIRONMENT != "PRE" && $ENVIRONMENT != "PROD" && $ENVIRONMENT != "NONE"'
      when: never
    - if: '$PIPELINE == "verification" && ( $PROVIDER_VERSION == null || $PROVIDER_BRANCH == null || $CONSUMER_BRANCH == null)'
      when: never
    - when: always

stages:
  - setup
  - build
  - publication
  - verification
  - deployment

default:
  cache:
    key: pact-cli-cache
    paths:
      - $CI_PROJECT_DIR/pact/
  before_script:
    - export PATH="$CI_PROJECT_DIR/pact/bin:$PATH"

pact-cli:
  stage: setup
  script:
    - curl -fsSL https://raw.githubusercontent.com/pact-foundation/pact-ruby-standalone/master/install.sh | bash
  rules:
    - if: '$PIPELINE == "verification"'
      when: never
    - when: on_success

consumer:
  stage: build
  script:
    - echo PACTICIPANT="consumer" >> environment.env
    - echo PACTS_FOLDER="consumer/target/pacts" >> environment.env
    - mvn -f consumer/pom.xml $MAVEN_CLI_OPTS clean install
  artifacts:
    paths:
      - consumer/target/pacts
    reports:
      dotenv: environment.env
  rules:
    - if: '$PIPELINE == "consumer"'

student-provider:
  stage: build
  script:
    - echo PACTICIPANT="student-provider" >> environment.env
    - mvn -f student-provider/pom.xml $MAVEN_CLI_OPTS clean install
      -Dpactbroker.consumerversionselectors.rawjson='[{"deployed":true}, {"latest":true}]'
      -Dpact.verifier.publishResults=true
      -Dpact.provider.version=$CI_COMMIT_SHA
      -Dpact.provider.branch=$CI_COMMIT_BRANCH
  artifacts:
    reports:
      dotenv: environment.env
  rules:
    - if: '$PIPELINE == "student-provider"'

teacher-provider:
  stage: build
  script:
    - echo PACTICIPANT="teacher-provider" >> environment.env
    - mvn -f teacher-provider/pom.xml $MAVEN_CLI_OPTS clean install
    - echo OPENAPI_LOCATION="teacher-provider/target/openapi.yaml" >> environment.env
    - echo OpenAPI specification generated by code >> verification-results.txt
    - echo VERIFICATION_LOCATION="verification-results.txt" >> environment.env
  artifacts:
    paths:
      - teacher-provider/target/openapi.yaml
      - verification-results.txt
    reports:
      dotenv: environment.env
  rules:
    - if: '$PIPELINE == "teacher-provider"'

publish-contract:
  stage: publication
  script:
    - pact-broker publish $PACTS_FOLDER --auto-detect-version-properties
  dependencies:
    - consumer
  rules:
    - if: '$PIPELINE == "consumer"'
  needs:
    - job: pact-cli
    - job: consumer

publish-openapi:
  stage: publication
  script:
    - pactflow publish-provider-contract $OPENAPI_LOCATION 
      --provider=$PACTICIPANT
      --provider-app-version=$CI_COMMIT_SHA
      --branch=$CI_COMMIT_BRANCH
      --specification=oas
      --content-type=application/yaml
      --verification-success
      --verifier=springdoc-openapi
      --verification-results=$VERIFICATION_LOCATION
      --verification-results-content-type=text/plain
  dependencies:
    - teacher-provider
  rules:
    - if: '$PIPELINE == "teacher-provider"'
  needs:
    - job: pact-cli
    - job: teacher-provider

can-i-deploy:
  stage: deployment
  script:
    - pact-broker can-i-deploy
      --pacticipant $PACTICIPANT
      --version $CI_COMMIT_SHA
      --to-environment $ENVIRONMENT
      --retry-while-unknown=5
      --retry-interval=15
  rules:
    - if: '$PIPELINE == "verification"'
      when: never
    - if: '$ENVIRONMENT == "NONE"'
      when: never
    - when: on_success
  needs:
    - job: pact-cli
    - job: consumer
      optional: true
    - job: publish-contract
      optional: true
    - job: student-provider
      optional: true
    - job: teacher-provider
      optional: true

deploy:
  stage: deployment
  script:
    - echo We have deployed $PACTICIPANT to $ENVIRONMENT!!!
  rules:
    - if: '$PIPELINE == "verification"'
      when: never
    - if: '$ENVIRONMENT == "NONE"'
      when: never
    - when: on_success
  needs:
    - job: pact-cli
    - job: can-i-deploy

tagging:
  stage: deployment
  script:
    - pact-broker record-deployment
      --pacticipant $PACTICIPANT
      --version $CI_COMMIT_SHA
      --environment $ENVIRONMENT
  rules:
    - if: '$PIPELINE == "verification"'
      when: never
    - if: '$ENVIRONMENT == "NONE"'
      when: never
    - when: on_success
  needs:
    - job: pact-cli
    - job: deploy
    - job: consumer
      optional: true
    - job: student-provider
      optional: true
    - job: teacher-provider
      optional: true

verification:
  stage: verification
  variables:
    GIT_STRATEGY: clone
    GIT_CHECKOUT: "false"
  before_script:
    - git checkout -B $PROVIDER_BRANCH $PROVIDER_VERSION
    - >
      if [ "$PROVIDER_NAME" = "student-provider" ]; then
        export FOLDER_PATH="student-provider"
      else
        export FOLDER_PATH="$PROVIDER_NAME"
      fi
  script:
    - mvn -f $FOLDER_PATH/pom.xml $MAVEN_CLI_OPTS clean install
      -Dpactbroker.consumerversionselectors.rawjson='[{"branch":"'$CONSUMER_BRANCH'"}]'
      -Dpact.verifier.publishResults=true
      -Dpact.provider.version=$PROVIDER_VERSION
      -Dpact.provider.branch=$PROVIDER_BRANCH
  rules:
    - if: '$PIPELINE == "verification"'
